apiVersion: v1
data:
  grafana-dashboard-provider.yml: |
    apiVersion: 1

    providers:
    - name: 'default'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: false
      updateIntervalSeconds: 10 #how often Grafana will scan for changed dashboards
      options:
        path: /var/lib/grafana/dashboards
kind: ConfigMap
metadata:
  name: grafana-config
---
apiVersion: v1
data:
  influxdb-datasource.yml: |
    # config file version
    apiVersion: 1

    # list of datasources to insert/update depending
    # what's available in the database
    datasources:
      # <string, required> name of the datasource. Required
    - name: influxdb
      # <string, required> datasource type. Required
      type: influxdb
      # <string, required> access mode. proxy or direct (Server or Browser in the UI). Required
      access: proxy
      # <int> org id. will default to orgId 1 if not specified
      orgId: 1
      # <string> url
      url: http://172.17.0.6:8086
      # <string> database password, if used
      password: admin123
      # <string> database user, if used
      user: root
      # <string> database name, if used
      database: tutorialdb
      # version
      version: 1
      # <bool> allow users to edit datasources from the UI.
      editable: false
kind: ConfigMap
metadata:
  name: grafana-datasource
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: grafana
    project: testgrafana
  name: grafanapvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      volumes:
      - configMap:
          name: grafana-config
        name: grafana-config
      - configMap:
          name: grafana-datasource
        name: grafana-datasource
      - persistentVolumeClaim:
          claimName: grafanapvc
        name: var-lib-grafana
      containers: 
      - name: grafana
        image: docker.io/grafana/grafana:5.3.2
        imagePullPolicy: IfNotPresent
        envFrom:
        - secretRef:
            name: grafana-creds
        volumeMounts:
        - mountPath: /var/lib/grafana/
          name: var-lib-grafana
        - mountPath: /etc/grafana/provisioning/datasources/
          name: grafana-datasource
          readOnly: true
        - mountPath: /etc/grafana/provisioning/dashboards/
          name: grafana-config
          readOnly: true
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: grafana
  name: grafana
spec:
  ports:
  - port: 3000
    protocol: TCP
  selector:
    app: grafana
  type: NodePort

